{{$embeddedDB := and (eq .Values.db.external.enabled false) (eq .Values.db.embedded.persist true)  }}
---
apiVersion: apps/v1
{{- if $embeddedDB}}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: {{ include "config-db.name" . }}
  labels:
    {{- include "config-db.labels" . | nindent 4 }}
    {{- include "config-db.extraLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 1
  selector:
    matchLabels: {{- include "config-db.selectorLabels" . | nindent 6 }}
  {{- if $embeddedDB }}
  serviceName: {{ include "config-db.name" . }}
  volumeClaimTemplates:
    - metadata:
        name: config-db-embedded-database
        labels:
          {{- include "config-db.labels" . | nindent 10 }}
      spec:
        {{- if not (eq .Values.db.embedded.storageClass "") }}
        storageClassName: {{ .Values.db.embedded.storageClass }}
        {{- end }}
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.db.embedded.storage }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "config-db.selectorLabels" . | nindent 8 }}
        {{- include "config-db.extraLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "config-db.serviceAccountName" . }}
     {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "config-db.name" . }}
            optional: true
        {{- with .Values.volumes }}
          {{- toYaml . | nindent 8 -}}
        {{- end }}
      containers:
        - name: {{ include "config-db.name" . }}
          image: "{{ tpl .Values.global.imageRegistry . }}/{{ tpl .Values.image.name . }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /live
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          command:
            - /app/config-db
          args:
            - operator
            {{- if (tpl .Values.logLevel .)}}
            - {{ tpl .Values.logLevel . }}
            {{- end }}
            - --disable-postgrest={{ .Values.disablePostgrest }}
            - --change-retention-days={{ .Values.configChangeRetentionDays }}
            - --analysis-retention-days={{ .Values.configAnalysisRetentionDays }}
            {{- if .Values.jsonLogs }}
            - --json-logs
            {{- end }}
            {{- if .Values.db.runMigrations}}
            - --db-migrations
            {{- end}}
            {{- if (tpl .Values.otel.collector .) }}
            - --otel-collector-url={{ tpl .Values.otel.collector . | default "" }}
            {{- end }}
            {{- if (tpl .Values.otel.serviceName .) }}
            - --otel-service-name={{ tpl .Values.otel.serviceName . | default "config-db" }}
            {{- end }}
            {{- range $k, $v := .Values.extraArgs}}
            - --{{$k}}={{$v}}
            {{- end }}
          {{- if .Values.upstream.enabled}}
          envFrom:
            - secretRef:
                name: {{ .Values.upstream.secretKeyRef.name }}
          {{- end}}
          env:
            - name: GOMAXPROCS
              value: {{ coalesce .Values.env.GOMAXPROCS (include "gomaxprocs" . ) | quote }}
            - name: GOMEMLIMIT
              value: {{ coalesce .Values.env.GOMEMLIMIT (include "gomemlimit" . ) | quote }}
            {{- range $k, $v := omit .Values.env "GOMAXPROCS" "GOMEMLIMIT" }}
            - name: {{$k}}
              value: {{$v | quote}}
            {{- end }}
            - name: DB_URL
              {{- if eq .Values.db.external.enabled true }}
              valueFrom:
                secretKeyRef:
                  name: "{{ if .Values.global.db.connectionPooler.enabled }}{{ .Values.global.db.connectionPooler.secretKeyRef.name }}{{ else }}{{ .Values.db.external.secretKeyRef.name }}{{ end }}"
                  key: "{{ if .Values.global.db.connectionPooler.enabled }}{{ .Values.global.db.connectionPooler.secretKeyRef.key }}{{ else }}{{ .Values.db.external.secretKeyRef.key }}{{ end }}"
              {{- else }}
              value: "embedded:///opt/database"
              {{- end }}
            - name: NAMESPACE
              value: {{ .Values.namespace | default .Release.Namespace }}
            {{- if .Values.upstream.enabled}}
            - name: UPSTREAM_PAGE_SIZE
              value: '{{ .Values.upstream.pageSize }}'
            {{- end}}
            {{- if (tpl .Values.otel.labels .)}}
            - name: OTEL_LABELS
              value: '{{ tpl .Values.otel.labels .}}'
            {{- end}}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
              {{- toYaml . | nindent 12}}
            {{- end }}
            - mountPath: /app/config.properties
              name: config
              subPath: config.properties
            {{- if $embeddedDB}}
            - name: config-db-embedded-database
              mountPath: "/opt/database"
            {{- end }}
      {{- with .Values.extra }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
