{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "affinity": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.Affinity",
      "required": []
    },
    "clickhouse": {
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable ClickHouse for analytics",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "image": {
          "properties": {
            "name": {
              "default": "clickhouse/clickhouse-server",
              "description": "ClickHouse image name",
              "required": [],
              "title": "name"
            },
            "tag": {
              "default": "25.4",
              "description": "ClickHouse image tag",
              "required": [],
              "title": "tag"
            }
          },
          "required": [],
          "title": "image"
        },
        "properties": {
          "additionalProperties": true,
          "description": "ClickHouse server properties",
          "properties": {
            "keep_alive_timeout": {
              "default": "300",
              "required": [],
              "title": "keep_alive_timeout",
              "type": "string"
            },
            "mark_cache_size": {
              "default": "67108864",
              "required": [],
              "title": "mark_cache_size",
              "type": "string"
            },
            "max_concurrent_queries": {
              "default": "10",
              "required": [],
              "title": "max_concurrent_queries",
              "type": "string"
            },
            "max_connections": {
              "default": "4",
              "required": [],
              "title": "max_connections",
              "type": "string"
            },
            "uncompressed_cache_size": {
              "default": "134217728",
              "required": [],
              "title": "uncompressed_cache_size",
              "type": "string"
            }
          },
          "required": [
            "max_connections",
            "mark_cache_size",
            "keep_alive_timeout",
            "max_concurrent_queries",
            "uncompressed_cache_size"
          ],
          "title": "properties"
        },
        "resources": {
          "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements",
          "required": []
        }
      },
      "required": [],
      "title": "clickhouse"
    },
    "configAnalysisRetentionDays": {
      "default": 60,
      "description": "Retention days for config analysis",
      "required": [],
      "title": "configAnalysisRetentionDays",
      "type": "integer"
    },
    "configChangeRetentionDays": {
      "default": 60,
      "description": "Retention days for config changes",
      "required": [],
      "title": "configChangeRetentionDays",
      "type": "integer"
    },
    "db": {
      "additionalProperties": false,
      "properties": {
        "embedded": {
          "additionalProperties": false,
          "properties": {
            "persist": {
              "default": true,
              "description": "If the database is embedded, setting this to true will persist the contents of the database through a persistent volume",
              "required": [],
              "title": "persist",
              "type": "boolean"
            },
            "storage": {
              "default": "20Gi",
              "description": "Storage size for the embedded database persistent volume",
              "required": [],
              "title": "storage"
            },
            "storageClass": {
              "default": "",
              "description": "Storage class for the embedded database persistent volume",
              "required": [],
              "title": "storageClass"
            }
          },
          "required": [],
          "title": "embedded"
        },
        "external": {
          "additionalProperties": false,
          "properties": {
            "create": {
              "default": false,
              "description": "Setting create:true will create\n  - a postgres stateful set\n  - the secret \u0026\n  - the service to expose the postgres stateful set.\nBy default, the generated secret will use 'postgres' as the username and a randomly generated password.\nIf you need to set a custom username and password, you can populate a secret named 'postgres-connection' before install\nwith POSTGRES_USER and POSTGRES_PASSWORD\n\nIf create:false, a preexisting secret containing the URI to an existing postgres database must be provided\nThe URI must be in the format 'postgresql://\"$user\":\"$password\"@\"$host\"/\"$database\"'",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "enabled": {
              "default": false,
              "description": "Setting enabled to true will use an external postgres DB.\nYou can either use the embedded db or an external db.\nIf both is enabled, then embedded db will take precedence.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "secretKeyRef": {
              "additionalProperties": false,
              "properties": {
                "key": {
                  "default": "DB_URL",
                  "description": "This is the key that we look for in the secret.",
                  "required": [],
                  "title": "key"
                },
                "name": {
                  "default": "config-db-postgresql",
                  "description": "The name of the secret to look for.",
                  "required": [],
                  "title": "name"
                }
              },
              "required": [
                "name",
                "key"
              ],
              "title": "secretKeyRef"
            },
            "storage": {
              "default": "20Gi",
              "description": "Storage size for the external database persistent volume (if create=true)",
              "required": [],
              "title": "storage"
            },
            "storageClass": {
              "default": "",
              "description": "Storage class for the external database persistent volume (if create=true)",
              "required": [],
              "title": "storageClass"
            }
          },
          "required": [],
          "title": "external"
        },
        "runMigrations": {
          "default": true,
          "description": "Run database migrations on startup",
          "required": [],
          "title": "runMigrations",
          "type": "boolean"
        }
      },
      "required": [],
      "title": "db"
    },
    "disablePostgrest": {
      "default": false,
      "description": "Set to true if you want to disable the postgrest service",
      "required": [],
      "title": "disablePostgrest",
      "type": "boolean"
    },
    "env": {
      "additionalProperties": true,
      "description": "environment variables to add e.g. GOMEMLIMIT",
      "required": [],
      "title": "env"
    },
    "extra": {
      "additionalProperties": true,
      "description": "Extra values to be applied to the pod spec",
      "required": [],
      "title": "extra"
    },
    "extraArgs": {
      "additionalProperties": true,
      "description": "command line arguments to config-db",
      "required": [],
      "title": "extraArgs"
    },
    "extraEnvFrom": {
      "additionalProperties": true,
      "items": {
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.EnvFromSource",
        "required": []
      },
      "required": [],
      "title": "extraEnvFrom",
      "type": "array"
    },
    "global": {
      "additionalProperties": true,
      "properties": {
        "affinity": {
          "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.Affinity",
          "required": []
        },
        "db": {
          "additionalProperties": true,
          "properties": {
            "connectionPooler": {
              "properties": {
                "enabled": {
                  "default": "false",
                  "required": [],
                  "title": "enabled"
                },
                "secretKeyRef": {
                  "additionalProperties": true,
                  "properties": {
                    "key": {
                      "default": "DB_URL",
                      "required": [],
                      "title": "key"
                    },
                    "name": {
                      "default": "mission-control-connection-pooler",
                      "required": [],
                      "title": "name"
                    }
                  },
                  "required": [
                    "name",
                    "key"
                  ],
                  "title": "secretKeyRef"
                }
              },
              "required": [],
              "title": "connectionPooler"
            }
          },
          "required": [],
          "title": "db"
        },
        "imagePrefix": {
          "default": "flanksource",
          "description": "Global image prefix to use for all images",
          "required": [],
          "title": "imagePrefix"
        },
        "imagePullSecrets": {
          "description": "Global image pull secrets",
          "items": {
            "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.LocalObjectReference",
            "required": []
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "imageRegistry": {
          "default": "docker.io",
          "description": "Global image registry to use for all images",
          "required": [],
          "title": "imageRegistry"
        },
        "labels": {
          "additionalProperties": true,
          "required": [],
          "title": "labels"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "required": [],
          "title": "nodeSelector"
        },
        "otel": {
          "properties": {
            "collector": {
              "default": "",
              "description": "OpenTelemetry gRPC collector endpoint in host:port format",
              "required": [],
              "title": "collector"
            },
            "labels": {
              "default": "",
              "description": "labels in \"a=b,c=d\" format",
              "required": [],
              "title": "labels"
            }
          },
          "required": [],
          "title": "otel"
        },
        "serviceAccount": {
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "required": [],
              "title": "annotations"
            },
            "name": {
              "default": "",
              "description": "Note unlike other globals, the global serviceAccount.name overrides the local value",
              "required": [],
              "title": "name"
            }
          },
          "required": [],
          "title": "serviceAccount"
        },
        "serviceMonitor": {
          "properties": {
            "enabled": {
              "default": "false",
              "description": "Set to true to enable prometheus service monitor globally",
              "required": [],
              "title": "enabled"
            },
            "labels": {
              "additionalProperties": true,
              "required": [],
              "title": "labels"
            }
          },
          "required": [],
          "title": "serviceMonitor"
        },
        "tolerations": {
          "items": {
            "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.Toleration",
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "global"
    },
    "image": {
      "properties": {
        "name": {
          "default": "{{.Values.global.imagePrefix}}/config-db",
          "description": "Name of the main application image",
          "required": [],
          "title": "name"
        },
        "pullPolicy": {
          "default": "IfNotPresent",
          "description": "Image pull policy",
          "enum": [
            "Always",
            "IfNotPresent",
            "Never"
          ],
          "required": [],
          "title": "pullPolicy"
        },
        "tag": {
          "default": "latest",
          "description": "Overrides the image tag whose default is the chart appVersion.",
          "required": [],
          "title": "tag"
        }
      },
      "required": [],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "description": "Image pull secrets for the main application image",
      "items": {
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.LocalObjectReference",
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "imageRegistry": {
      "default": "",
      "description": "Image registry for the main application image. Overrides global.imageRegistry if set.",
      "required": [],
      "title": "imageRegistry"
    },
    "ingress": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations"
        },
        "enabled": {
          "default": false,
          "description": "Enable ingress for the application",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "host": {
          "default": "config-db.local",
          "description": " kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"\nHostname for the ingress",
          "required": [],
          "title": "host"
        },
        "tls": {
          "description": "TLS configuration for the ingress",
          "items": {
            "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.networking.v1.IngressTLS",
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [],
      "title": "ingress"
    },
    "jsonLogs": {
      "default": true,
      "description": "Enable JSON formatted logs",
      "required": [],
      "title": "jsonLogs",
      "type": "boolean"
    },
    "logLevel": {
      "default": "",
      "description": "Log level for the application (e.g., info, debug, error)",
      "required": [],
      "title": "logLevel"
    },
    "nameOverride": {
      "default": "",
      "description": "Use this only if you want to replace the default that is .Chart.Name as the name of all the objects.",
      "required": [],
      "title": "nameOverride"
    },
    "nodeSelector": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement",
      "additionalProperties": true,
      "required": [],
      "type": "object"
    },
    "otel": {
      "additionalProperties": false,
      "properties": {
        "collector": {
          "default": "",
          "description": "OpenTelemetry gRPC collector endpoint in host:port format",
          "required": [],
          "title": "collector"
        },
        "labels": {
          "default": "",
          "description": "labels in \"a=b,c=d\" format",
          "required": [],
          "title": "labels"
        },
        "serviceName": {
          "default": "config-db",
          "description": "OpenTelemetry service name",
          "required": [],
          "title": "serviceName"
        }
      },
      "required": [],
      "title": "otel"
    },
    "podSecurityContext": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.PodSecurityContext",
      "additionalProperties": true,
      "required": []
    },
    "properties": {
      "additionalProperties": true,
      "description": "config-db properties to override",
      "required": [],
      "title": "properties"
    },
    "replicas": {
      "default": 1,
      "description": "Number of replicas for the deployment",
      "required": [],
      "title": "replicas",
      "type": "integer"
    },
    "resources": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements",
      "additionalProperties": false,
      "required": []
    },
    "scrapeRuleConfigMaps": {
      "description": "a list of configmaps to load scrape rules from, the configmap should have a single entry called \"config.yaml\"",
      "items": {
        "required": [],
        "type": "string"
      },
      "required": [],
      "title": "scrapeRuleConfigMaps",
      "type": "array"
    },
    "securityContext": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.SecurityContext",
      "required": []
    },
    "serviceAccount": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "required": [],
          "title": "annotations"
        },
        "create": {
          "default": true,
          "description": "Create a new service account",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "name": {
          "default": "config-db-sa",
          "description": "Name of the service account to use or create",
          "required": [],
          "title": "name"
        },
        "rbac": {
          "additionalProperties": false,
          "properties": {
            "clusterRole": {
              "default": true,
              "description": "Whether to create cluster-wide or namespaced roles",
              "required": [],
              "title": "clusterRole",
              "type": "boolean"
            },
            "configmaps": {
              "default": true,
              "description": "for secret management with valueFrom",
              "required": [],
              "title": "configmaps",
              "type": "boolean"
            },
            "exec": {
              "default": true,
              "description": "for kubernetesFile lookups",
              "required": [],
              "title": "exec",
              "type": "boolean"
            },
            "readAll": {
              "default": true,
              "description": "for use with kubernetes resource lookups",
              "required": [],
              "title": "readAll",
              "type": "boolean"
            },
            "secrets": {
              "default": true,
              "description": "for secret management with valueFrom",
              "required": [],
              "title": "secrets",
              "type": "boolean"
            },
            "tokenRequest": {
              "default": true,
              "description": "for secret management with valueFrom",
              "required": [],
              "title": "tokenRequest",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "rbac"
        }
      },
      "required": [],
      "title": "serviceAccount"
    },
    "serviceMonitor": {
      "properties": {
        "enabled": {
          "default": "false",
          "description": "Set to true to enable prometheus service monitor for this service",
          "required": [],
          "title": "enabled"
        },
        "labels": {
          "additionalProperties": true,
          "required": [],
          "title": "labels"
        }
      },
      "required": [],
      "title": "serviceMonitor"
    },
    "tolerations": {
      "description": "Tolerations for pod scheduling",
      "items": {
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.Toleration",
        "required": []
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    },
    "upstream": {
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable upstream configuration",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "pageSize": {
          "default": 500,
          "description": "Page size for upstream communication",
          "required": [],
          "title": "pageSize",
          "type": "integer"
        },
        "secretKeyRef": {
          "properties": {
            "name": {
              "default": "config-db-upstream",
              "description": "Name of the secret containing upstream credentials. Must contain: AGENT_NAME, UPSTREAM_USER, UPSTREAM_PASSWORD \u0026 UPSTREAM_HOST",
              "required": [],
              "title": "name"
            }
          },
          "required": [],
          "title": "secretKeyRef"
        }
      },
      "required": [],
      "title": "upstream"
    },
    "volumeMounts": {
      "description": "Additional volumeMounts on the output Deployment definition.",
      "items": {
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.VolumeMount",
        "required": []
      },
      "required": [],
      "title": "volumeMounts",
      "type": "array"
    },
    "volumes": {
      "description": "Additional volumes on the output Deployment definition.",
      "items": {
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.30.0/_definitions.json#/definitions/io.k8s.api.core.v1.Volume",
        "required": []
      },
      "required": [],
      "title": "volumes",
      "type": "array"
    }
  },
  "required": [
    "image"
  ],
  "type": "object"
}