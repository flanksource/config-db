apiVersion: configs.flanksource.com/v1
kind: ScrapeConfig
metadata:
  name: kubernetes-scraper
spec:
  retention:
    changes:
      - name: PodCrashLooping
        count: 10
        age: 72h
  kubernetes:
    - clusterName: local-kind-cluster
      transform:
        relationship:
          # Link a service to a deployment (adjust the label selector accordingly)
          - filter: config_type == "Kubernetes::Service"
            type:
              value: 'Kubernetes::Deployment'
            name:
              expr: |
                has(config.spec.selector) && has(config.spec.selector.name) ? config.spec.selector.name : ''
          # Link Pods to PVCs
          - filter: config_type == 'Kubernetes::Pod'
            expr: |
              config.spec.volumes.
                filter(item, has(item.persistentVolumeClaim)).
                map(item, {"type": "Kubernetes::PersistentVolumeClaim", "name": item.persistentVolumeClaim.claimName}).
                toJSON()
          # Link Argo Application to the resources
          - filter: config_type == "Kubernetes::Application" && config.apiVersion == "argoproj.io/v1alpha1"
            expr: |
              config.status.resources.map(item, {
                "type": "Kubernetes::" + item.kind,
                "name": item.name,
                "labels": {
                  "namespace": item.namespace,
                },
              }).toJSON()
        mask:
          - selector: |
              has(config.kind) ? config.kind == 'Certificate' : false
            jsonpath: .spec.dnsNames
            value: md5sum
          - selector: 'config_type == "Kubernetes::Certificate"'
            jsonpath: .spec.commonName
            value: md5sum
          - selector: config_class == 'Connection'
            jsonpath: "$..['password','bearer','clientSecret','personalAccessToken','certificate','secretKey','token'].value"
            value: '******'
        exclude:
          - types:
              - Kubernetes::*
            jsonpath: '.metadata.ownerReferences'
          - types:
              - Kubernetes::Pod
            jsonpath: '.metadata.generateName'
        changes:
          mapping:
            - filter: >
                change.change_type == 'diff' && change.summary == "status.containerStatuses" && 
                patch != null && has(patch.status) && has(patch.status.containerStatuses) && 
                patch.status.containerStatuses.size() > 0 &&
                has(patch.status.containerStatuses[0].restartCount)
              type: PodCrashLooping
            - filter: >
                change.change_type == 'diff' &&
                jq('.status.conditions[] | select(.type == "Healthy").message', patch).contains('Health check passed')
              type: HealthCheckPassed
          exclude:
            - 'config_type == "Kubernetes::Endpoints" && details.message == "metadata.annotations.endpoints.kubernetes.io/last-change-trigger-time"'
            - 'config_type == "Kubernetes::Node" && has(details.message) && details.message == "status.images"'
            - 'details.source.component == "canary-checker" && (change_type == "Failed" || change_type == "Pass")'
            - >
              change_type == "diff" && summary == "status.reconciledAt" && 
              config != null && 
              has(config.apiVersion) && config.apiVersion == "argoproj.io/v1alpha1" && 
              has(config.kind) && config.kind == "Application"
      properties:
        - filter: 'config_type == "Kubernetes::Pod"'
          name: Logs
          icon: opensearch
          links:
            - text: opensearch
              url: https://opensearch.svc/_dashboards/app/discover#/?_a=(query:(language:kuery,query:'kubernetes_pod_id:{{.id}}'))
        - filter: 'config_type == "Kubernetes::Node"'
          name: Grafana
          icon: grafana
          links:
            - text: grafana
              url: https://grafana.svc/d/85a562078cdf77779eaa1add43ccec1e/kubernetes-compute-resources-namespace-pods?var-namespace={{.name}}
      exclusions:
        name:
          - junit*
          - k6-junit*
          - newman-junit*
          - playwright-junit-*
          - hello-world*
        namespace:
          - canaries
          - monitoring
        kind:
          - Secret
          - ReplicaSet
          - APIService
          - PodMetrics
          - NodeMetrics
          - endpoints.discovery.k8s.io
          - endpointslices.discovery.k8s.io
          - leases.coordination.k8s.io
          - podmetrics.metrics.k8s.io
          - nodemetrics.metrics.k8s.io
          - customresourcedefinition
          - controllerrevision
          - certificaterequest
          - orders.acme.cert-manager.io
        labels:
          canary-checker.flanksource.com/generated: 'true'
      relationships:
        - kind:
            expr: "has(spec.claimRef) ? spec.claimRef.kind : ''"
          name:
            expr: "has(spec.claimRef) ? spec.claimRef.name : ''"
          namespace:
            expr: "has(spec.claimRef) ? spec.claimRef.namespace : ''"

        - kind:
            value: Kustomization
          name:
            label: kustomize.toolkit.fluxcd.io/name
          namespace:
            label: kustomize.toolkit.fluxcd.io/namespace

        - kind:
            value: HelmRelease
          name:
            label: helm.toolkit.fluxcd.io/name
          namespace:
            label: helm.toolkit.fluxcd.io/namespace

        # FluxCD Git relationships
        - name:
            expr: "has(spec.sourceRef) ? spec.sourceRef.name : '' "
          namespace:
            expr: "has(spec.sourceRef) && has(spec.sourceRef.namespace)  ? spec.sourceRef.namespace : metadata.namespace "
          kind:
            value: "GitRepository"
      event:
        exclusions:
          reason:
            - SuccessfulCreate
            - Created
            - DNSConfigForming
        severityKeywords:
          error:
            - failed
            - error
          warn:
            - backoff
            - nodeoutofmemory
