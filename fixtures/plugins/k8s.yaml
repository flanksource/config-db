apiVersion: configs.flanksource.com/v1
kind: ScrapePlugin
metadata:
  name: k8s-locations-and-aliases
  namespace: mc
spec:
  aliases:
    - type: Kubernetes::Cluster
      values:
        - cluster://kubernetes/{{.name}}

    - type: Kubernetes::Namespace
      values:
        - namespace://kubernetes/{{tags.cluster}}/{{.name}}

    - type: Kubernetes::Deployment
      values:
        - deployment://kubernetes/{{tags.cluster}}/{{.tags.namespace}}/{{.name}}

    - type: Kubernetes::StatefulSet
      values:
        - statefulset://kubernetes/{{tags.cluster}}/{{.tags.namespace}}/{{.name}}

    - type: Kubernetes::DaemonSet
      values:
        - daemonset://kubernetes/{{tags.cluster}}/{{.tags.namespace}}/{{.name}}

    - type: Kubernetes::Job
      values:
        - job://kubernetes/{{tags.cluster}}/{{.tags.namespace}}/{{.name}}

    - type: Kubernetes::HelmRelease
      values:
        - helm://{{tags.cluster}}/{{tags.namespace}}/{{.name}}

    - type: Kubernetes::Node
      filter: labels.apiVersion == "v1"
      values:
        - node://kubernetes/{{tags.cluster}}/{{.name}}

  locations:
    - type: Kubernetes::*
      values:
        - cluster://kubernetes/{{.tags.cluster}}

    - type: Kubernetes::*
      filter: has(labels.node)
      values:
        - node://kubernetes/{{.tags.cluster}}/{{.labels.node}}

    - type: Kubernetes::*
      filter: has(tags.namespace)
      values:
        - namespace://kubernetes/{{tags.cluster}}/{{.tags.namespace}}

    - type: 'Kubernetes::*'
      filter: has(labels.deployment)
      values:
        - deployment://kubernetes/{{tags.cluster}}/{{.tags.namespace}}/{{.labels.deployment}}

    - type: Kubernetes::*
      filter: has(labels.statefulset)
      values:
        - statefulset://kubernetes/{{tags.cluster}}/{{.tags.namespace}}/{{.labels.statefulset}}

    - type: Kubernetes::*
      filter: has(labels.daemonset)
      values:
        - daemonset://kubernetes/{{tags.cluster}}/{{.tags.namespace}}/{{.labels.daemonset}}

    - type: Kubernetes::*
      filter: has(labels.job)
      values:
        - job://kubernetes/{{tags.cluster}}/{{.tags.namespace}}/{{.labels.job}}

    - type: Kubernetes::*
      withParent: Kubernetes::HelmRelease
      values:
        - helm://{{tags.cluster}}/{{.parent.tags.namespace}}/{{.parent.name}}

    - type: Kubernetes::Node
      filter: >
        .config.spec.providerID.startsWith("aws://") &&
        "topology.kubernetes.io/region" in labels &&
        "topology.kubernetes.io/zone" in labels
      values:
        - zone://aws/{{.labels["topology.kubernetes.io/region"]}}/{{.labels["topology.kubernetes.io/zone"]}}
        - region://aws/{{.labels["topology.kubernetes.io/region"]}}
        - ec2instance://aws/{{.config.spec.providerID | strings.Split "/" | last}}
