name: Create Release
on:
  push:
    branches:
      - main
jobs:
  semantic-release:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.semantic.outputs.release-version }}
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: codfish/semantic-release-action@6c65402abb31a48c3f7396d7d099da015be67c2b # v4.0.1
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  binary:
    runs-on: ubuntu-latest
    needs: semantic-release
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: "16"
      - name: Install Go
        uses: buildjet/setup-go@v5
        with:
          go-version: v1.24.x
      - uses: buildjet/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            .bin
          key: cache-${{ hashFiles('**/go.sum') }}-${{ hashFiles('.bin/*') }}
          restore-keys: |
            cache-

      - run: make release
        env:
          VERSION: v${{ needs.semantic-release.outputs.release-version }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@81c65b7cd4de9b2570615ce3aad67a41de5b1a13 # v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./.release/*
          tag: v${{ needs.semantic-release.outputs.release-version }}
          overwrite: true
          file_glob: true
  docker:
    needs: semantic-release
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Publish to DockerHub Registry
        uses: elgohr/Publish-Docker-Github-Action@1d95820b6952cab6e48a2454ff6ca9804bf65f31 # v5
        with:
          name: flanksource/config-db
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          snapshot: true
          dockerfile: build/Dockerfile
          tags: "latest,v${{ needs.semantic-release.outputs.release-version }}"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Publish to ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: k4y9r6y5
          REPOSITORY: config-db
          IMAGE_TAG: "v${{ needs.semantic-release.outputs.release-version }}"
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG -f build/Dockerfile .
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

  helm:
    runs-on: ubuntu-latest
    needs: [semantic-release, docker]
    if: needs.semantic-release.outputs.new-release-published == 'true'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Download yq
        run: |
          wget -nv -nc -O yq https://github.com/mikefarah/yq/releases/download/v4.20.2/yq_linux_amd64
          chmod +x yq
      - name: Set version
        # Always use git tags as semantic release can fail due to rate limit
        run: |
          git fetch --prune --unshallow
          echo "RELEASE_VERSION=$(git describe --abbrev=0 --tags | sed -e 's/^v//')" >> $GITHUB_ENV
      - name: Update chart version
        run: ./yq -i e '.version = "${{ env.RELEASE_VERSION }}"' chart/Chart.yaml
      - name: Update app version
        run: ./yq -i e '.appVersion = "${{ env.RELEASE_VERSION }}"' chart/Chart.yaml
      - name: Update image tags
        run: ./yq -i e '.image.tag = "v${{ env.RELEASE_VERSION }}"' chart/values.yaml
      - name: Set up Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
        with:
          version: v3.8.0
      - name: Package Helm chart
        run: |
          helm package ./chart
      - name: Clone charts repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: "${{ github.repository_owner }}/charts"
          path: charts
          token: "${{ secrets.FLANKBOT }}"
      - name: Update chart repo
        run: |
          cd charts
          cp ../config-db-*.tgz ./
          helm repo index --merge index.yaml .
      - name: Push changes to chart repo
        uses: stefanzweifel/git-auto-commit-action@28e16e81777b558cc906c8750092100bbb34c5e3 # v7.0.0
        with:
          commit_message: "Release ${{ needs.semantic-release.outputs.release-version }} of ${{ github.repository }}"
          branch: gh-pages
          repository: ./charts

  update-incident-commander:
    runs-on: ubuntu-latest
    needs: [helm, semantic-release]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: "${{ github.repository_owner }}/incident-commander-chart"
          token: ${{ secrets.FLANKBOT }}
          path: ./incident-commander-chart
      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - |\
          tar xz && sudo mv ${BINARY} /usr/bin/yq
        env:
          VERSION: v4.25.1
          BINARY: yq_linux_amd64
      - name: Update config-db version in Incident-commander-chart
        run: |
          cd incident-commander-chart
          yq eval-all -i  '(.dependencies[] | select(.name == "config-db")) ref $d | $d.version = "${{ needs.semantic-release.outputs.release-version }}"' chart/Chart.yaml
          yq eval-all -i  '(.dependencies[] | select(.name == "config-db")) ref $d | $d.version = "${{ needs.semantic-release.outputs.release-version }}"' agent-chart/Chart.yaml
      - name: Push changes to chart repo
        uses: stefanzweifel/git-auto-commit-action@28e16e81777b558cc906c8750092100bbb34c5e3 # v7.0.0
        with:
          commit_message: "chore: update config-db chart dependency to ${{ needs.semantic-release.outputs.release-version }}"
          repository: ./incident-commander-chart
